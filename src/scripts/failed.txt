
const equipmentStateHistory = require('../data/equipmentStateHistory.json')

const operating = "0808344c-454b-4c36-89e8-d7687e692d57"
const stopped = "baff9783-84e8-4e01-874b-6fd743b875ad"
const maintenance = "03b2d446-e3ba-4c82-8dc2-a5611fea6e1f"

export function getProductivity(props) {
    const datas = [{data: ''}]

    equipmentStateHistory[props[0]].states.map((item, index) => {
        let data = new Date(item.date).toLocaleDateString()
        let hour = new Date(item.date).toLocaleTimeString()

        if (datas[datas.length - 1].data.includes(data)) {
            if (item.equipmentStateId == operating) {
                datas[datas.length - 1].hours.push({operating: parseInt(hour)})

            } else if (item.equipmentStateId == stopped && equipmentStateHistory[props[0]].states[index - 1]) {
                if (equipmentStateHistory[props[0]].states[index - 1].equipmentStateId == operating) {
                    datas[datas.length - 1].hours.push({stopped: parseInt(hour)})
                }

            } else if (item.equipmentStateId == maintenance && equipmentStateHistory[props[0]].states[index - 1]) {
                if (equipmentStateHistory[props[0]].states[index - 1].equipmentStateId == operating) {
                    datas[datas.length - 1].hours.push({maintenance: parseInt(hour)})
                }
            }

        } else {
            datas.push({data: data, hours: []})
            if (item.equipmentStateId == operating) {
                datas[datas.length - 1].hours.push({operating: parseInt(hour)})

            } else if (item.equipmentStateId == stopped && equipmentStateHistory[props[0]].states[index - 1]) {
                if (equipmentStateHistory[props[0]].states[index - 1].equipmentStateId == operating) {
                    datas[datas.length - 1].hours.push({stopped: parseInt(hour)})
                }

            } else if (item.equipmentStateId == maintenance && equipmentStateHistory[props[0]].states[index - 1]) {
                if (equipmentStateHistory[props[0]].states[index - 1].equipmentStateId == operating) {
                    datas[datas.length - 1].hours.push({maintenance: parseInt(hour)})
                }
            }
        }
    })

    datas.shift()

    datas.map((item, index) => {
        if (item.hours.length % 2 == 0) {
            if (item.hours[0]?.operating) {
                let calc = []
                item.hours.map((item, index) => {
                    if (index % 2 == 0) {
                        calc.push(-item.operating || -item.stopped || -item.maintenance)
                    } else {
                        calc.push(item.operating || item.stopped || item.maintenance)
                    }
                })
                let result = 0
                calc.map((item, index) => {
                    result += calc[index]
                })
                datas[index].hours.push({workedHours: result})
            } else {
            }
        } else {
        }
    })
}
